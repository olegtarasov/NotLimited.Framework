@* Generator : MvcHelper *@
@using System.Web.Mvc.Html
@using NotLimited.Framework.Data.Queries
@using NotLimited.Framework.Web.Controls
@using NotLimited.Framework.Web.Controls.Grid
@using NotLimited.Framework.Web.Views.Shared.Helpers


@helper TableHeader(System.Web.Mvc.HtmlHelper helper, PropertyMetadata prop, string title, HashSet<string> enabledFields, TableHelpers.SortOrder sortOrder)
{
    if (enabledFields == null || enabledFields.Contains(prop.PropertyInfo.Name))
    {
        <th class="@(prop.Sortable ? "sortable" : null)">

            @title

            @if (prop.Sortable)
            {
                <div class="pull-right">
                    <span class="fa @TableHelpers.GetSortIcon(sortOrder)" style="margin-right: 5px" />
                </div>
                <form action="@(new UrlHelper(helper.ViewContext.RequestContext).Action())" method="GET">
                    <input type="hidden" name="sortBy" value="@prop.PropertyInfo.Name" />
                    <input type="hidden" name="descending" value="@TableHelpers.IsOppositeOrderDescending(sortOrder).ToString()" />
                    @(helper.Form().HiddenForQuery("sortBy", "descending"))
                </form>
            }
        </th>
    }
}

@helper TableFieldConvention(System.Web.Mvc.HtmlHelper helper, string modelName, string fieldName, object model)
{
    <td>
        @(helper.Partial(modelName + "/TableView/" + fieldName, model))
    </td>
}

@helper TableFieldFixedView(System.Web.Mvc.HtmlHelper helper, string view, object model)
{
    <td>
        @(helper.Partial(view, model))
    </td>
}